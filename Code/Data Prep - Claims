library(data.table)
library(lubridate)
library(ggplot2)
library(tidyverse)
library(glmnet)
library(caret)
library(e1071)
library(PRROC) 
library(doParallel)
library(Rcpp)
library(MASS)


#read in UNSW claims and earned data 
claims_data_raw  = read.csv("UNSW_claims_data.csv", header = TRUE)
earned_data_raw  = read.csv("UNSW_earned_data_adjusted_Sep27.csv", header = TRUE)

#convert to data table
claims_data      = setDT(claims_data_raw)
earned_data      = setDT(earned_data_raw)

#data checks
summary(claims_data$total_claim_amount) 
summary(claims_data$claim_paid) 
summary(claims_data$tenure) #contains negative tenure values which doesn't make sense 
unique(claims_data$claim_status) #why is there covered and covered_with_exclusions? should just be split between paid and not paid? 
unique(claims_data$condition_category)
length(unique(claims_data$claim_id)) #less than number of rows in data so duplicates
length(unique(claims_data$exposure_id))

#remove time from claim_start_date and turn class into DATE
claims_data[, start_date := lubridate::ymd(substr(claim_start_date, 1, 10))]

#change negative tenure values to 0
View(claims_data[tenure < 0])
claims_data = claims_data[tenure < 0, tenure := 0]

#fix claim_status values
View(claims_data[claim_status %in% c("covered", "covered_with_exclusions")]) #need to split into paid and not paid
claims_data = claims_data[claim_status == "covered" & total_claim_amount > 0 & claim_paid == 0, claim_status := "covered_not_paid"]
claims_data = claims_data[claim_status == "covered" & total_claim_amount > 0 & claim_paid > 0, claim_status := "covered_paid"]
claims_data = claims_data[claim_status == "covered_with_exclusions" & total_claim_amount > 0 & claim_paid == 0, claim_status := "covered_with_exclusions_not_paid"]
claims_data = claims_data[claim_status == "covered_with_exclusions" & total_claim_amount > 0 & claim_paid > 0, claim_status := "covered_with_exclusions_paid"]

View(claims_data[claim_status == "covered_paid" & total_claim_amount > 0 & claim_paid == 0]) #why are these labelled as covered_paid if not paid? 
claims_data = claims_data[claim_status == "covered_paid" & total_claim_amount > 0 & claim_paid == 0, claim_status := "covered_not_paid"]

#check for duplicate claim_id 
View(claims_data[duplicated(claims_data$claim_id)])

#aggregate on a claim_id level
claims_data_new = claims_data[,  .(total_claim_amount = sum(total_claim_amount), 
                                   claim_paid         = sum(claim_paid)), 
                                 .(claim_id,
                                   exposure_id,
                                   start_date, 
                                   claim_status, 
                                   condition_category, 
                                   tenure)]
View(claims_data_new[duplicated(claims_data_new$claim_id)])
nrow(claims_data_new) - length(unique(claims_data_new$claim_id)) #this isnt zero due to rows where claim_id is identical but other columns are different eg. condition_category which we cant aggregate






